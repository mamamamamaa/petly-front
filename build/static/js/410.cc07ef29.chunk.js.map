{"version":3,"file":"static/js/410.cc07ef29.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/LoginPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { media } from \"../Layout/Layout.styled\";\r\nimport { theme } from \"../../utils/theme.jsx\";\r\nimport { Field } from \"formik\";\r\n\r\nexport const Container = styled.div`\r\n  width: 280px;\r\n  padding-inline: 0px;\r\n  padding-top: 42px;\r\n  padding-bottom: 0px;\r\n  background-color: ${theme.colors.secondary};\r\n  margin-inline: auto;\r\n  box-sizing: border-box;\r\n  ${media.tablet} {\r\n    width: 608px;\r\n    padding: 60px 80px 40px 80px;\r\n    background-color: ${theme.colors.accentText};\r\n    border-radius: 40px;\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\r\n  }\r\n  ${media.desktop} {\r\n    width: 618px;\r\n    padding: 60px 80px;\r\n    background-color: ${theme.colors.accentText};\r\n    border-radius: 40px;\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin-bottom: 40px;\r\n  font-family: 'Manrope';\r\n  font-weight: ${theme.fontWeights.bold};\r\n  font-size: 24px;\r\n  line-height: 1.4;\r\n  letter-spacing: 0.04em;\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${theme.colors.black};\r\n  ${media.tablet} {\r\n    font-weight: ${theme.fontWeights.normal};\r\n    font-size: 36px;\r\n  }\r\n`;\r\n\r\nexport const FieldLogin = styled.div`\r\n  margin-bottom: 16px;\r\n`;\r\nexport const FieldPass = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 40px;\r\n  padding-left: 14px;\r\n  font-family: 'Manrope';\r\n  font-weight: ${theme.fontWeights.news};\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n  align-items: center;\r\n  letter-spacing: 0.04em;\r\n  color: ${theme.colors.black};\r\n  background: transparent;\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  &::placeholder {\r\n    font-style: normal;\r\n    font-weight: ${theme.fontWeights.news};\r\n    font-size: 14px;\r\n    line-height: 1.36;\r\n    letter-spacing: 0.04em;\r\n    color: ${theme.colors.gray};\r\n  }\r\n  :hover,\r\n  :focus {\r\n    border: 2px solid ${theme.colors.primary};\r\n    outline: 0;\r\n  }\r\n  ${media.tablet} {\r\n    height: 52px;\r\n    padding-left: 32px;\r\n    font-size: 18px;\r\n    line-height: 1.38;\r\n    background: ${theme.colors.secondary};\r\n    &::placeholder {\r\n      font-style: normal;\r\n      font-weight: ${theme.fontWeights.news};\r\n      font-size: 18px;\r\n      line-height: 1.38;\r\n      letter-spacing: 0.04em;\r\n      color: ${theme.colors.gray};\r\n    }\r\n  }\r\n  ${media.desktop} {\r\n    height: 52px;\r\n    padding-left: 32px;\r\n    font-size: 18px;\r\n    line-height: 1.38;\r\n    background: ${theme.colors.secondary};\r\n    &::placeholder {\r\n      font-style: normal;\r\n      font-weight: ${theme.fontWeights.news};\r\n      font-size: 18px;\r\n      line-height: 1.38;\r\n      letter-spacing: 0.04em;\r\n      color: ${theme.colors.gray};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  width: 280px;\r\n  height: 44px;\r\n  padding: 10px 28px;\r\n  margin-bottom: 40px;\r\n  border: none;\r\n  border-radius: 40px;\r\n  color: ${theme.colors.accentText};\r\n  background-color: ${theme.colors.primary};\r\n  cursor: pointer;\r\n  font-family: 'Manrope';\r\n  font-weight: ${theme.fontWeights.normal};\r\n  font-size: 20px;\r\n  line-height: 1.35px;\r\n  align-items: center;\r\n  text-align: center;\r\n  letter-spacing: 0.04em;\r\n  :hover,\r\n  :focus {\r\n    color: ${theme.colors.black};\r\n    border: 2px solid ${theme.colors.primary};\r\n    background-color: ${theme.colors.accentText};\r\n  }\r\n  ${media.tablet} {\r\n    width: 458px;\r\n  }\r\n  ${media.desktop} {\r\n    width: 458px;\r\n    height: 48px;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: 'Manrope';\r\n  font-style: normal;\r\n  font-weight: ${theme.fontWeights.news};\r\n  font-size: 12px;\r\n  line-height: 1.33;\r\n  letter-spacing: 0.04em;\r\n  color: ${theme.colors.gray};\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  color: ${theme.colors.blue};\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const ErrorText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 8px;\r\n  font-family: 'Manrope';\r\n  font-size: 12px;\r\n  line-height: 1.4;\r\n  letter-spacing: 0.03em;\r\n  color: #e53e3e;\r\n`;","import { Formik, Form, ErrorMessage } from \"formik\"\r\nimport * as yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {login}  from \"../../redux/auth/operations\";\r\n\r\nimport {\r\n    Container,\r\n    FieldLogin,\r\n    FieldPass,\r\n    Title,\r\n    Input,\r\n    Button,\r\n    Text,\r\n    Link,\r\n    ErrorText\r\n    \r\n} from \"./LoginForm.styled\";\r\n\r\nconst securityPassword = /^\\S*$/\r\n\r\nconst loginSchema = yup.object().shape({\r\n    email:yup.string().email(\"Invalid email adress\").required(\"Required\"),\r\n   password: yup.string().min(7,\"Password must be at least 7 characters\").max(32,\"Password must be at most 32 characters\").matches(securityPassword, \"Must not contain spaces\").required(\"Required\"),\r\n})\r\n\r\nconst FormError = ({ name }) => {\r\n    return (\r\n        <ErrorMessage\r\n            name={name}            \r\n            render={message => <ErrorText>{message}</ErrorText>}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst LoginForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialValues = {\r\n        email:\"\",\r\n        password:\"\"\r\n    }\r\n    \r\n    const handleSubmit = async (values, actions) => {\r\n        const { resetForm } = actions; \r\n        const form = ({ 'email': values.email, 'password': values.password }); \r\n        const { error } = await dispatch(login(form));\r\n\r\n        if (!error) {\r\n        resetForm() \r\n        }\r\n                               \r\n        console.log(values)\r\n        //  console.log(actions)\r\n     }\r\n        \r\n    return (\r\n        <Container>\r\n            <Title>Login</Title>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={handleSubmit}\r\n                validationSchema={loginSchema}\r\n            >\r\n                \r\n                <Form autoComplete=\"on\">\r\n                    <FieldLogin>\r\n                        <label htmlFor=\"email\">  \r\n                            <Input id=\"loginEmail\" type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n                            <FormError name=\"email\" />\r\n                        </label>\r\n                        \r\n                    </FieldLogin>\r\n\r\n                    <FieldPass>\r\n                        <label htmlFor=\"password\">\r\n                            <Input id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                            <FormError name=\"password\" />\r\n                        </label>\r\n                    </FieldPass>\r\n                                  \r\n                    <Button type=\"submit\">Login</Button>\r\n                    <Text>\r\n                        <p> Don't have an account?\r\n                            <span >\r\n                                <Link to='/register'>Register</Link>\r\n                            </span>\r\n                        </p>                         \r\n                    </Text>\r\n                </Form>\r\n            </Formik>\r\n        </Container>\r\n    )\r\n }\r\n\r\n\r\nexport default LoginForm ","import LoginForm from \"../components/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n  return <>Login page\r\n  <LoginForm />\r\n  </>;\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["Container","styled","theme","media","Title","FieldLogin","FieldPass","Input","Field","Button","Text","Link","NavLink","ErrorText","loginSchema","yup","shape","email","required","password","min","max","matches","FormError","name","render","message","dispatch","useDispatch","handleSubmit","values","actions","resetForm","form","login","error","console","log","initialValues","onSubmit","validationSchema","autoComplete","htmlFor","id","type","placeholder","to"],"sourceRoot":""}