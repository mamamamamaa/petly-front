{"version":3,"file":"static/js/452.41ea5053.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { media } from '../Layout/Layout.styled';\r\nimport { theme } from '../../utils';\r\nimport { Form, Field } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\n// import MaskedInput from 'react-text-mask';\r\nimport mobileBackground from '../../utils/images/h-log-registr-mobile.png';\r\nimport tabletBackground from '../../utils/images/h-log-registr-tablet.png';\r\nimport desktopBackground from '../../utils/images/h-log-registr-tablet.png';\r\n\r\nexport const FormContainer = styled.div`\r\n  width: 100%;\r\n  min-height: calc(100vh - 58px);\r\n  background-image: url(${mobileBackground});\r\n  background-position: bottom;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  ${media.tabletAndDesktop} {\r\n    background-image: url(${tabletBackground});\r\n    padding-top: 184px;\r\n    padding-bottom: 268px;\r\n    min-height: calc(100vh - 64px);\r\n  }\r\n  ${media.desktop} {\r\n    background-image: url(${desktopBackground});\r\n    padding-top: 50px;\r\n    padding-bottom: 147px;\r\n  }\r\n`;\r\nexport const Title = styled.h2`\r\n  font-size: 24px;\r\n  font-weight: ${theme.fontWeights.bold};\r\n  margin-bottom: 40px;\r\n  margin-top: 0;\r\n  ${media.tabletAndDesktop} {\r\n    font-size: 36px;\r\n    font-weight: ${theme.fontWeights.normal};\r\n  }\r\n`;\r\nexport const Form1 = styled(Form)`\r\n  position: relative;\r\n  width: 280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 44px;\r\n  padding-bottom: 40px;\r\n  margin: 0 auto;\r\n  ${media.tabletAndDesktop} {\r\n    width: 608px;\r\n    margin: 0 auto;\r\n    padding: 60px 0 40px 0;\r\n    background-color: ${theme.colors.white};\r\n    border-radius: 40px;\r\n    -webkit-box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\r\n    -moz-box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\r\n    box-shadow: 7px 4px 14px 0 rgba(0, 0, 0, 0.11);\r\n  }\r\n  ${media.desktop} {\r\n    width: 618px;\r\n    padding: 60px 0 60px 0;\r\n  }\r\n  > div {\r\n    position: relative;\r\n  }\r\n  :last-child {\r\n    font-size: 12px;\r\n  }\r\n`;\r\nexport const ShowPassword = styled.span`\r\n  display: inline-block;\r\n  position: absolute;\r\n  width: 25px;\r\n  height: 25px;\r\n  right: 15px;\r\n  top: 13px;\r\n  color: grey;\r\n  cursor: pointer;\r\n  svg {\r\n    width: inherit;\r\n    height: inherit;\r\n  }\r\n`;\r\nexport const Input = styled(Field)`\r\n  width: 280px;\r\n  font-size: 14px;\r\n  line-height: 1.3;\r\n  padding: 11px 0 12px 14px;\r\n  background: ${theme.colors.background};\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  margin-bottom: 16px;\r\n  &:focus,\r\n  &:hover {\r\n    outline: none;\r\n  }\r\n  ${media.tabletAndDesktop} {\r\n    width: 448px;\r\n    font-size: 18px;\r\n    padding: 14px 0 13px 32px;\r\n  }\r\n  ${media.desktop} {\r\n    width: 458px;\r\n  }\r\n`;\r\nexport const PhoneInput = styled(Field)`\r\n  width: 280px;\r\n  padding: 11px 0 12px 14px;\r\n  background: ${theme.colors.background};\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  margin-bottom: 16px;\r\n  &:focus,\r\n  &:hover {\r\n    outline: none;\r\n  }\r\n  ${media.tabletAndDesktop} {\r\n    width: 448px;\r\n    padding: 14px 0 13px 32px;\r\n    font-size: 18px;\r\n  }\r\n  ${media.desktop} {\r\n    width: 458px;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  padding: 11px 0 12px 14px;\r\n  text-align: center;\r\n  color: ${theme.colors.white};\r\n  background: ${theme.colors.primary};\r\n  border: 1px solid rgba(245, 146, 86, 0.5);\r\n  border-radius: 40px;\r\n  margin: 24px 0 40px 0;\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.05);\r\n    transition: transform 0.5s;\r\n  }\r\n  :hover:before {\r\n    left: 100%;\r\n  }\r\n  :before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(\r\n      120deg,\r\n      transparent,\r\n      rgba(255, 255, 255, 0.6),\r\n      transparent\r\n    );\r\n    transition: all 650ms;\r\n  }\r\n  :disabled {\r\n    opacity: 0.5;\r\n    cursor: auto;\r\n    transform: none;\r\n    transition: none;\r\n  }\r\n  :disabled:before {\r\n    transform: none;\r\n    transition: none;\r\n  }\r\n  ${media.tabletAndDesktop} {\r\n    width: 458px;\r\n    font-size: 20px;\r\n  }\r\n`;\r\nexport const BackButton = styled.button`\r\n  width: 100%;\r\n  padding: 11px 0 12px 14px;\r\n  text-align: center;\r\n  color: #000;\r\n  background: ${theme.colors.white};\r\n  border: 1px solid ${theme.colors.primary};\r\n  border-radius: 40px;\r\n  margin: -26px 0 40px 0;\r\n  cursor: pointer;\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.05);\r\n    transition: transform 0.5s;\r\n  }\r\n  :hover:before {\r\n    left: 100%;\r\n  }\r\n  :before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: linear-gradient(\r\n      120deg,\r\n      transparent,\r\n      rgba(245, 146, 86, 0.9),\r\n      transparent\r\n    );\r\n    transition: all 650ms;\r\n  }\r\n  ${media.tabletAndDesktop} {\r\n    width: 458px;\r\n    font-size: 20px;\r\n  }\r\n`;\r\nexport const ErrBox = styled.div`\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  bottom: 0;\r\n  left: 15px;\r\n  color: red;\r\n  font-size: 14px;\r\n  font-style: italic;\r\n  ${media.tabletAndDesktop} {\r\n    left: 33px;\r\n  }\r\n`;\r\nexport const StyledLink = styled(Link)`\r\n  color: ${theme.colors.blue};\r\n  transition: color ${theme.colors.background};\r\n  :hover,\r\n  :focus {\r\n    color: ${theme.colors.primary};\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useFormik, Formik } from 'formik';\r\nimport { object, string, ref } from 'yup';\r\n// import Spinner from \"../Spinner\";\r\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\r\n\r\n// import { useAuth } from \"../../redux/hooks\";\r\nimport { register } from '../../redux/auth/operations';\r\n\r\nimport {\r\n  Form1,\r\n  FormContainer,\r\n  Input,\r\n  Button,\r\n  Title,\r\n  ErrBox,\r\n  BackButton,\r\n  PhoneInput,\r\n  ShowPassword,\r\n  StyledLink,\r\n} from './RegisterForm.styled';\r\n\r\nconst registerSchema = object().shape({\r\n  password: string()\r\n    .min(7, 'Too Short!')\r\n    .max(32, 'Too Long!')\r\n    .required('Password is required'),\r\n  confirmPassword: string()\r\n    .required('Please confirm your password')\r\n    .oneOf([ref('password')], 'Passwords does not match'),\r\n  email: string()\r\n    .matches(\r\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\r\n      'Invalid email'\r\n    )\r\n    .email('Invalid email')\r\n    .required('Email is required'),\r\n  name: string()\r\n    .min(2, 'min 2 symbols')\r\n    .matches(/^[a-zA-Zа-яА-Я-`'іІїЇ]*$/, 'Only letters')\r\n    .required('Name is required'),\r\n  mobilePhone: string()\r\n    .matches(/^\\+?3?8?(0\\d{2}\\d{3}\\d{2}\\d{2})$/, 'Bad phone number')\r\n    .required('Phone is required'),\r\n  city: string()\r\n    .matches(\r\n      /^(([a-zA-Zа-яА-Я]([-]?)){1,})([^-,?,\\s,.,0-9,!])+(,)+((\\s?[a-zA-Zа-яА-Я](([-]?){0,1})){1,})([^-,?,.,\\s,0-9,!])$/,\r\n      'Error. Example: Brovary, Kyiv'\r\n    )\r\n    .required('City is required'),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const [isShown, setIsShown] = useState(true);\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const showForm = () => {\r\n    setIsShown(false);\r\n  };\r\n  const hideForm = () => {\r\n    setIsShown(true);\r\n  };\r\n\r\n  const onSubmit = values => {\r\n    const { name, email, password, mobilePhone, city } = values;\r\n    dispatch(\r\n      register({\r\n        name,\r\n        email,\r\n        password,\r\n        mobilePhone,\r\n        city,\r\n      }),\r\n      hideForm()\r\n    );\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      mobilePhone: '',\r\n      city: '',\r\n    },\r\n    validationSchema: registerSchema,\r\n    onSubmit,\r\n  });\r\n  const isValid =\r\n    (formik.errors.email && formik.touched.email) ||\r\n    (formik.errors.password && formik.touched.password) ||\r\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\r\n    formik.values.email === '' ||\r\n    formik.values.confirmPassword === '';\r\n\r\n  const showPassword = () => {\r\n    setShowPass(!showPass);\r\n  };\r\n\r\n  const showConfirmPassword = () => {\r\n    setShowConfirmPass(!showConfirmPass);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {loading ? (\r\n        <Spinner />\r\n      ) : ( */}\r\n      <FormContainer>\r\n        <Formik validationSchema={registerSchema}>\r\n          <Form1 onSubmit={formik.handleSubmit}>\r\n            <Title>Registration</Title>\r\n            {isShown && (\r\n              <>\r\n                <div>\r\n                  <Input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  {formik.errors.email || formik.touched.email ? (\r\n                    <ErrBox>{formik.errors.email}</ErrBox>\r\n                  ) : null}\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {isShown && (\r\n              <>\r\n                <div>\r\n                  <Input\r\n                    name=\"password\"\r\n                    type={showPass ? 'text' : 'password'}\r\n                    placeholder=\"Password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  <ShowPassword onClick={showPassword}>\r\n                    {!showPass ? <ImEyeBlocked /> : <ImEye />}\r\n                  </ShowPassword>\r\n                  {formik.errors.password && formik.touched.password ? (\r\n                    <ErrBox>{formik.errors.password}</ErrBox>\r\n                  ) : null}\r\n                </div>\r\n              </>\r\n            )}\r\n            {isShown && (\r\n              <>\r\n                <div>\r\n                  <Input\r\n                    name=\"confirmPassword\"\r\n                    type={showConfirmPass ? 'text' : 'password'}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confirmPassword}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                  <ShowPassword onClick={showConfirmPassword}>\r\n                    {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\r\n                  </ShowPassword>\r\n                  {formik.errors.confirmPassword &&\r\n                  formik.touched.confirmPassword ? (\r\n                    <ErrBox>{formik.errors.confirmPassword}</ErrBox>\r\n                  ) : null}\r\n                </div>\r\n              </>\r\n            )}\r\n            {isShown && (\r\n              <Button type=\"button\" onClick={showForm} disabled={isValid}>\r\n                Next\r\n              </Button>\r\n            )}\r\n            {!isShown && (\r\n              <>\r\n                <div>\r\n                  <Input\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.name}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  {formik.errors.name && formik.touched.name ? (\r\n                    <ErrBox>{formik.errors.name}</ErrBox>\r\n                  ) : null}\r\n                </div>\r\n              </>\r\n            )}\r\n            {!isShown && (\r\n              <>\r\n                <div>\r\n                  <Input\r\n                    name=\"city\"\r\n                    type=\"text\"\r\n                    placeholder=\"City, region\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.city}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n\r\n                  {formik.errors.city && formik.touched.city ? (\r\n                    <ErrBox>{formik.errors.city}</ErrBox>\r\n                  ) : null}\r\n                </div>\r\n              </>\r\n            )}\r\n            {!isShown && (\r\n              <>\r\n                <div>\r\n                  <PhoneInput\r\n                    type=\"text\"\r\n                    placeholder=\"Mobile phone\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.mobilePhone}\r\n                    onBlur={formik.handleBlur}\r\n                    name=\"mobilePhone\"\r\n                  />\r\n\r\n                  {formik.errors.mobilePhone && formik.touched.mobilePhone ? (\r\n                    <ErrBox>{formik.errors.mobilePhone}</ErrBox>\r\n                  ) : null}\r\n                </div>\r\n              </>\r\n            )}\r\n            {!isShown && <Button type=\"submit\">Registration</Button>}\r\n            {!isShown && (\r\n              <BackButton type=\"button\" onClick={hideForm}>\r\n                Back\r\n              </BackButton>\r\n            )}\r\n            <div>\r\n              <span>Already have an account?</span>{' '}\r\n              <StyledLink to=\"/login\">Login</StyledLink>\r\n            </div>\r\n          </Form1>\r\n        </Formik>\r\n      </FormContainer>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import RegisterForm from \"../components/RegisterForm\";\r\nconst RegisterPage = () => {\r\n  return <>Register page\r\n   <RegisterForm />\r\n   </>;\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["FormContainer","styled","mobileBackground","media","tabletBackground","desktopBackground","Title","theme","Form1","Form","ShowPassword","Input","Field","PhoneInput","Button","BackButton","ErrBox","StyledLink","Link","registerSchema","object","shape","password","string","min","max","required","confirmPassword","oneOf","ref","email","matches","name","mobilePhone","city","useState","isShown","setIsShown","showPass","setShowPass","showConfirmPass","setShowConfirmPass","dispatch","useDispatch","hideForm","formik","useFormik","initialValues","validationSchema","onSubmit","values","register","isValid","errors","touched","handleSubmit","type","placeholder","onChange","handleChange","value","onBlur","handleBlur","onClick","disabled","to"],"sourceRoot":""}